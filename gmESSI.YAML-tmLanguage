# [PackageDev] target_format: plist, ext: tmLanguage
---
name: gmESSI
scopeName: source.gmESSI
fileTypes: [gmessi]
uuid: b095c611-75c4-4280-af1f-72c1cac74826

patterns:
## first, match the global stuff
- name: entity.other.document-start.gmessi
  match: ^---(?= |$)

- name: entity.other.document-end.gmessi
  match: ^\.{3}$

- include: '#MultipleLineComments'
- include: '#LineComments1'
- include: '#LineComments2'
- include: '#General_Command'

# # everything else should remain unmatched
# - include: '#illegal'

#######################################

repository:

# control sequences
  MultipleLineComments:
    name: comment.block.gmessi
    begin: \b(/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*)\b
    end: \b(\*+/)\b

  LineComments1:
    match: (//.*)
    captures:
      '1': {name: comment.line.number-sign.gmessi}
      '2': {name: punctuation.definition.comment.line.gmessi}

  LineComments2:
    match: ((\s*#.*)|())
    captures:
      '1': {name: comment.line.number-sign.gmessi}
      '2': {name: punctuation.definition.comment.line.gmessi}
 
  Strings:
    name: string.quoted.double.gmessi
    match:  \b\"((\\\")*[^$\"])*\"\b

  Chars:
    name: string.quoted.single.gmessi
    match:  \b\'((\\\')*[^\'])*\'\b

  PhysicalGroupTag:
    name: keyword.other.gmessi
    match: \b(\s*\$.*\$\s*)\b 

  Constants:
    name: constant.numeric.gmessi
    match: \b((-)?[0-9.]+|(-)?[0-9.]+e(-)?[0-9.]+)\b

  User_Variable:
    name: variable.parameter.gmessi
    match: \b([a-zA-Z_]|[a-zA-Z0-9])*\b

  GmESSI_Variable:
    name: other.parameter.gmessi
    match:  \b([a-zA-Z_]|[a-zA-Z0-9])*(:=|#)\b

  GmESSI_Command:
    begin: \[\s*([a-zA-Z0-9]|_)*\{
    beginCaptures:
      '0': {name: support.function.gmessi}
    patterns:
    - include: '#GmESSI_Variable'
    # - include: $self
    - include: '#Strings'
    - include: '#Chars'
    - include: '#Constants'
    - include: '#User_Variable'
    end: \}\s*\]
    endCaptures:
      '0': {name: support.function.gmessi} 

  General_Command:
    patterns:
    - include: '#GmESSI_Command'
    - include: source.python

  illegal:
    name: invalid.illegal.unrecognized.gmessi
    match: '[^\s}]'
...